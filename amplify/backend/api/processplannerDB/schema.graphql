## WARNING! The front-end version of this file provides a backup of the schema in your repo.
## HOWEVER, in order to work with AWS "amplify push" calls, you MUST manually copy this file
## into your amplify/backend/api/project-name/ directory before calling "amplify push"

type PlannerChecklistItem {
  id: String
  label: String
  done: Boolean
}

type PlannerSection {
  id: String
  ownerId: String!
  title: String
  type: String
  text: String
  items: [PlannerChecklistItem]
}

type PlannerContent {
  description: String
  paneSize: Float
  sections: [PlannerSection]
}

type PlannerTab {
  id: String!
  title: String!
  content: PlannerContent!
  ownerId: String!
}

type PlannerConfig {
  studentAccessLevel: String
  dueDate: String
  minWordsCount: Int
  minChecklistItems: Int
  maxScore: Int
}

type HomeworkFile {
  sectionId: ID!
  fileName: String
  fileKey: String
}

type Assignment @model {
  id: ID!
  courseId: ID
  ownerId: ID!
  title: String!
  summary: String
  image: String
  isLinkedToLms: Boolean
  lineItemId: String
  lockOnDate: AWSTimestamp
  isLockedOnSubmission: Boolean
  isUseAutoScore: Boolean
  isUseAutoSubmit: Boolean
  isArchived: Boolean
  isFavorite: Boolean
  toolAssignmentData: ToolAssignmentData
  allowResubmission: Boolean
}

type Homework
  @model
  @key(name: "ByAssignment", fields: ["assignmentId"], queryField: "homeworkByAssignment")
  @key(
    name: "ByStudentAndAssignment"
    fields: ["assignmentId", "studentOwnerId"]
    queryField: "homeworkByStudentAndAssignment"
  ) {
  id: ID!
  assignmentId: ID!
  studentOwnerId: ID!
  beganOnDate: AWSTimestamp
  submittedOnDate: AWSTimestamp
  isLocked: Boolean
  toolHomeworkData: ToolHomeworkData
}

type ToolAssignmentData {
  plannerData: [PlannerTab]
  plannerConfig: PlannerConfig
}

type ToolHomeworkData {
  plannerData: [PlannerTab]
  files: [HomeworkFile]
}
